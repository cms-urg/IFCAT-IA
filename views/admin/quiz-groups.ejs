<%- include ./header -%>


<div class="alert alert-info center-block">
    A <b>published</b> quiz is available for students in the tutorial to open and be assigned to a group automatically (you can assign/change groups manually at any time).
    An <b>active</b> quiz is one currently in progress: the questions are visible to students and they can submit responses while a quiz is active.
    Note that students will not be automatically assigned to groups while a quiz is active - you will have to do it manually.
</div>

<% if (!_.isEmpty(students)) { %>
<div class="col-md-3 dim">
    <label class="col control-label">
        <span>Publish?</span>
        <input type="checkbox" value="1" class="bootstrap-switch" id="publish"<%= tutorialQuiz.published ? ' checked' : '' %>>
    </label>
    <label class="col control-label">
        <span>Active?</span> 
        <input type="checkbox" value="1" class="bootstrap-switch" id="activate"<%= tutorialQuiz.active ? ' checked' : '' %>>
    </label>
    <label class="col control-label">
        <span>Archive?</span>
        <input type="checkbox" value="1" class="bootstrap-switch" id="archive"<%= tutorialQuiz.archived ? ' checked' : '' %>>
    </label>
</div>
<% } %>

<div class="col-md-9">
    <h1>Groups</h1>
    <div class="dim">
        <% if (!_.isEmpty(students)) { %>
        <div class="nav-actions">
            <button type="button" class="btn btn-default btn-sm" id="btn-refresh" 
                onclick="window.location.reload(true)"><span 
                class="glyphicon glyphicon-refresh"></span> Refresh</button>
            <button type="button" class="btn btn-default btn-sm" id="btn-add"><span 
                class="glyphicon glyphicon-plus"></span> Add group</button>
            <button type="button" class="btn btn-default btn-sm" id="btn-remove"><span 
                class="glyphicon glyphicon-remove"></span> Remove groups</button>
            <button type="button" class="btn btn-default btn-sm" id="btn-randomize"><span 
                class="glyphicon glyphicon-random"></span> Randomize groups</button>
            <button type="button" class="btn btn-default btn-sm btn-primary" id="btn-save"><span 
                class="glyphicon glyphicon-ok"></span> Save groups</button>
        </div>
        <% } %>
        <table id="table-quiz-groups" class="stretch">
            <thead>
                <tr>
                    <th rowspan="2" class="s">&nbsp;</th>
                    <th colspan="<%= 1 + groups.length %>">Groups</th>
                </tr>
                <% if (!_.isEmpty(students)) { %>
                    <tr>
                        <th class="u">Unassigned</th>
                        <% _.each(groups, function (group) { %>
                            <th class="g" data-group="<%= group.id %>"><%= group.name %></th>
                        <% }) %>
                    </tr>
                <% } %>
            </thead>
            <tbody>
            <% if (_.isEmpty(students)) { %>
                <tr>
                    <td colspan="2">No students have been added into the tutorial yet. Click <a href="/admin/courses/<%= course.id %>/students">here</a> to add students into tutorial.</td>
                </tr>
            <% } else { %>
                <% _.each(students, function (student) { %>
                    <tr>
                        <td class="s">
                            <a href="/admin/courses/<%= course.id %>/students/<%= student.id %>/marks"><%= student.name.full %></a>
                        </td>
                        <td class="u">
                            <input type="radio" name="groups[<%= student.id %>]" value="unassigned"<%= 
                                tutorialQuiz.isUnassigned(student.id) ? ' checked' : '' %>>
                        </td>
                        <% _.each(groups, function (group) { %>
                            <td class="g"><input type="radio" name="groups[<%= student.id %>]" value="<%= group.id %>"<%=
                                !!_.find(group.members, { id: student.id }) ? ' checked' : '' %>></td>
                        <% }) %>
                    </tr>
                <% }) %>
            <% } %>
            </tbody>
        </table>
    </div>
</div>

<%- include ./body-js -%>

<script>
$(function () {
    var url = {
        publish: '/admin/courses/<%= course.id %>/tutorial-quizzes/<%= tutorialQuiz.id %>/publish',
        activate: '/admin/courses/<%= course.id %>/tutorial-quizzes/<%= tutorialQuiz.id %>/activate',
        archive: '/admin/courses/<%= course.id %>/tutorial-quizzes/<%= tutorialQuiz.id %>/archive',
        generate: '/admin/courses/<%= course.id %>/tutorial-quizzes/<%= tutorialQuiz.id %>/groups/generate',
        save: '/admin/courses/<%= course.id %>/tutorial-quizzes/<%= tutorialQuiz.id %>/groups'
    };
    var trash = [];


    var $heading = $('.container > h1'),
        $table = $('#table-quiz-groups');

    // set option on quiz in tutorial
    $(':checkbox').on('switchChange.bootstrapSwitch', function (e, state) {
        var $dim = $(this).closest('.dim-wrap').addClass('on');
            $.bootstrapAlert('close');
        // send request
        $.ajax(url[this.id], {
            type: 'put',
            data: { state: state }, 
            success: function (res) {
                $heading.before($.bootstrapAlert('success', res));
            },
            error: function (xhr) {
                $heading.before($.bootstrapAlert('danger', xhr.responseText));
            },
            complete: function () {
                $dim.removeClass('on');
            }
        });
    });
    
     

    // select/unselect column
    $table.on('click', 'th.g', function () {
        var $th = $(this);
        $th.toggleClass('selected');
        $table.find('td.g:has([value=' + $th.data('group') + '])').toggleClass('selected');
    });
    // add new group to table
    $('#btn-add').click(function () {
        var $thead = $table.find('thead'), $tbody = $table.find('tbody');
        // get next group #
        var value = _.toInteger($thead.find('tr:eq(1) th:last-child').text()) + 1;
        // add header column
        $thead.find('tr:eq(1)').append(function () {
            return '<th class="g" data-group="' + value + '">' + value + '</th>';
        });
        // add body column
        $tbody.find('tr').append(function () {
            var name = $(this).find('td.u > :radio')[0].name; // groups[userId]
            return '<td class="g"><input type="radio" name="' + name + '" value="' + value + '"></td>';
        });
        // set colspan
        $thead.find('tr:eq(0) th:eq(1)').attr('colspan', function () { 
            return $tbody.find('tr:eq(0) td.u, tr:eq(0) td.g').length; 
        });
    });
    // ramdomize table
    $('#btn-remove').click(function () {
        $table.find('th.selected, td.selected').each(function () {
            var $elem = $(this);
            // mark selected group as trash
            if ($elem.is('[data-group]')) {
                trash.push($elem.data('group'));
            }
            $elem.remove();
        });
        // set colspan
        $table.find('thead tr:eq(0) th:eq(1)').attr('colspan', function () { 
            return $table.find('tbody tr:eq(0) td.u, tbody tr:eq(0) td.g').length; 
        });
    });
    // ramdomize table
    $('#btn-randomize').click(function () {
        var $dim = $(this).closest('.dim-wrap').addClass('on');
            $.bootstrapAlert('close');
        // mark all groups as trash
        $table.find('th[data-group]').each(function () { 
            var id = $(this).data('group');
            if (isNaN(id)) {
                trash.push(id); 
            }
        });
        // load new table
        $table.loadInner(window.location.href, function () { 
            $dim.removeClass('on'); 
        });
    });
    // save changes
    $('#btn-save').click(function () {
        var $dim = $(this).closest('.dim-wrap').addClass('on');
            $.bootstrapAlert('close');
        // push selected student-group ids
        var data = $table.find(':radio').serializeArray();
        // push group ids (to keep empty groups)
        $table.find('th[data-group]').each(function (i) {
            data.push({ name: 'groups[' + i + ']', value: $(this).data('group') });
        });
        // push trash data (to remove groups)
        $.each(trash, function () {
            data.push({ name: 'trash[]', value: this });
        });
        // send request
        $.ajax(url.save, {
            type: 'put',
            data: data,
            success: function (res) {
                $heading.after($.bootstrapAlert('success', res));
                $table.loadInner(window.location.href);
            },
            error: function (xhr) {
                $heading.after($.bootstrapAlert('danger', xhr.responseText));
            },
            complete: function () {
                $dim.removeClass('on');
            }
        });
    });
});
</script>

<%- include ./footer -%>